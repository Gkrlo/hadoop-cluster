---
# Required packages, libs, etc
- name: Install some packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - apt-transport-https
    - wget
    - tar
    - unzip
  tags:
    - requirements

# Java-role included
- include_role:
    name: java
  tags:
    - requirements

# Create Hadoop group & user
- name: Create hadoop group
  group:
    name: "{{ hadoop_user }}"
    state: present
  tags:
  - requirements


- name: Create hadoop user
  user:
    name: "{{ hadoop_user }}"
    password: "{{ hadoop_user | password_hash('sha512') }}"
    state: present
    shell: /bin/bash
    generate_ssh_key: yes
    ssh_key_bits: 2048
    groups:
      - "{{ hadoop_user }}"
      - sudo
  tags:
  - requirements


# Pre-configuration
- name: Remove similar IPs in hosts file
  lineinfile:
    dest: /etc/hosts
    regexp: "^{{ hostvars[item].ansible_eth0.ipv4.address }}"
    state: absent
  when: hostvars[ item ].ansible_eth0.ipv4.address is defined
  with_items: "{{ groups['nodes'] }}"
  tags:
    - requirements

- name: Add host in hosts file
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[item][ ansible_eth ].ipv4.address }} {{item}}"
    insertafter: EOF
    state: present
  when: hostvars[ item ][ ansible_eth ].ipv4.address is defined
  with_items: "{{ groups['nodes'] }}"
  tags:
    - requirements

- name: Fetch all public ssh keys
  shell: cat /home/{{ hadoop_user }}/.ssh/id_rsa.pub
  register: ssh_keys
  tags:
    - requirements

- name: Check ssh keys
  debug: msg="{{ ssh_keys.stdout }}"
  tags:
    - requirements

- name: Deploy keys on all servers
  authorized_key:
    user: "{{ hadoop_user }}"
    key: "{{ item[0] }}"
  delegate_to: "{{ item[1] }}"
  with_nested:
    - "{{ ssh_keys.stdout }}"
    - "{{ groups['nodes'] }}"
  tags:
    - requirements
