---
# Download (only if not downloaded yet) & Install
- name: Hive | Verify tar.gz is already downloaded
  stat:
    path: "/home/{{ hadoop_user }}//apache-hive-{{ hive_version }}-bin.tar.gz"
  register: st_hive_downloaded

- name: Hive | Download hive
  get_url:
    url: "{{ hive_download_url }}"
    dest: /home/{{ hadoop_user }}/
    remote_src: yes
    validate_certs: no
  when: st_hive_downloaded.stat.exists == False

- name: Hive | Unzip Hive package
  unarchive:
    src: "/home/{{ hadoop_user }}/apache-hive-{{ hive_version }}-bin.tar.gz"
    dest: /opt/
    group: "{{ hadoop_user }}"
    owner: "{{ hadoop_user }}"
    copy: no

- name: Hive | Ensure owner & group 
  file: 
    path: "{{ hive_home }}"
    state: directory
    group: "{{ hadoop_user }}"
    owner: "{{ hadoop_user }}"
    recurse: yes


# Set envs variables in ~/.bashrc & profile
- name: Hive | Remove hadoop env vars
  lineinfile:
    path: "/home/{{ hadoop_user }}/.bashrc"
    regexp: "^{{item['prefix']}}"
    state: absent
  with_items: "{{ hive_env_vars }}"

- name: Hive | Add hadoop envs ~/.bashrc
  lineinfile:
    path: "/home/{{ hadoop_user }}/.bashrc"
    line: "{{ item['prefix']+item['sufix'] }}"
    insertafter: EOF
    state: present
  with_items: "{{ hive_env_vars }}"

- name: Hive | Copy .bashrc to /etc/profile
  shell: "cp /home/{{ hadoop_user }}/.bashrc /etc/profile"
  args:
    executable: /bin/bash

- name: Hive | Copy .bashrc to ~/.profile
  shell: "cp /home/{{ hadoop_user }}/.bashrc ~/.profile"
  args:
    executable: /bin/bash


# Create directories
- name: Hive | Create warehouse_dir in HDFS
  shell: "{{ item }}"
  become: yes
  become_user: "{{ hadoop_user }}"
  args:
    chdir: "{{ hadoop_home }}/bin"
  with_items:
   - "./hdfs dfs -mkdir -p /tmp"
   - "./hdfs dfs -mkdir -p {{ hive_warehouse_dir }}"
   - "./hdfs dfs -chmod g+w {{ hive_warehouse_dir }}"
  
# Config files
- name: Hive | Ensure hive-env.sh is created
  file:
    path: "{{ hive_home }}/conf/hive-env.sh"
    state: touch
    group: "{{ hadoop_user }}"
    owner: "{{ hadoop_user }}"

- name: Hive | Remove hadoop_home in hive-env.sh
  lineinfile:
    path: "{{ hive_home }}/conf/hive-env.sh"
    regexp: "^{{ item['prefix'] }}"
    state: absent
  with_items: "{{ hive_conf_env_vars }}"

- name: Hive | Set hadoop_home in hive-env.sh
  lineinfile:
    path: "{{ hive_home }}/conf/hive-env.sh"
    line: "{{ item['prefix'] + item['sufix'] }}"
    insertbefore: BOF
    state: present
  with_items: "{{ hive_conf_env_vars }}"

- name: Hive | Create hive-site.xml
  template:
    src: hive-site.xml.j2
    dest: "{{ hive_home }}/conf/hive-site.xml"
    force: yes

