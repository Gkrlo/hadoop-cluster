---
- name: Hadoop | Remove similar IPs in hosts file
  lineinfile:
    dest: /etc/hosts
    regexp: "^{{ hostvars[item].ansible_default_ipv4.address }}"
    state: absent
  when: hostvars[ item ].ansible_default_ipv4.address is defined
  with_items: "{{ groups['hadoop'] }}"

- name: Hadoop | Add host in hosts file
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[item].ansible_default_ipv4.address }} {{item}}"
    insertafter: EOF
    state: present
  when: hostvars[ item ].ansible_default_ipv4.address is defined
  with_items: "{{ groups['hadoop'] }}"

- name: Hadoop | Generate SSH key
  shell: 'ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""'
  args:
    creates: /root/.ssh/id_rsa

- name: Hadoop | Fetch all public ssh keys
  shell: cat /root/.ssh/id_rsa.pub
  register: ssh_keys

- name: Hadoop | Check ssh keys
  debug: msg="{{ ssh_keys.stdout }}"

- name: Hadoop | Deploy keys on all servers
  authorized_key: user=root key="{{ item[0] }}"
  delegate_to: "{{ item[1] }}"
  with_nested:
    - "{{ ssh_keys.stdout }}"
    - "{{ groups['hadoop'] }}"
